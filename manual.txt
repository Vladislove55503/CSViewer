Инструкция для Linux (на основе Debian, как Ubuntu и Mint).
Мой Python версии 3.12.3.

1) Создайте пустой каталог и в него клонируйте репозиторий. 
   Сюда же установите виртуальное окружение командой "python3 -m venv venv".
   
2) Запустите вирт. окр. командой "source venv/bin/activate".
   Перейдите в каталог "CSViewer" командой "cd CSViewer".
   Установите зависимости командой "pip install -r requirements.txt".

3) Положите все ".csv" файлы в каталог проекта, рядом с файлом "main.py".

4) Готово.


Примеры команд:

    Обычный запуск - "python main.py --file products.csv".
    Пример наиболее полной команды - "python main.py --file products.csv --where "brand>apple" --order-by price=desc".
    Тестирование - "pytest".
    Узнать покрытие кода - "pytest --cov=main".

Подсказки:

    Чтобы увидеть список аргументов, воспользуйтесь командой "python main.py -h". Все аргументы имеют сокращения.
    Аргумент "--file" принимает: путь относительно файла "main.py", 
                                 абсолютный путь,
                                 можно не указывать, если целевой файл расположен, как сказано в пункте 3.
    Аргумент "--where" с операторами "<" и ">" можно использовать только в кавычках (--where "brand>apple").

Прошу заметить:

    В задании есть важное условие "Гарантируется что входные файлы валидны".
    В архитектуру заложена возможность быстрого добавления новых видов агрегации или даже команд 
        ("быстро" в том смысле, что это можно сделать, не переписывая полпроекта).
    В коде используются аннотации.
    Использованы только разрешённые библиотеки.
    Руки чесались, и я добавил "--order-by".
    Покрытие кода равняется 90%.

    Через неделю после выполнения задания я внёс изменения:
        + сгруппировал 8 тестов в 2, в прошлый раз была трудность с фикстурой "tmp_path".
        + форматер кода поубирал мои пробелы в конце строк. 

    Вы можете быть уверены, код полностью написан моими ручками :)